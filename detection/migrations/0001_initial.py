# Generated by Django 4.0.2 on 2022-03-10 13:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DetectedTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=300, null=True, verbose_name='название контрольного выезда')),
                ('date', models.DateTimeField(verbose_name='дата загрузки файла на детектирование')),
                ('video', models.FileField(blank=True, null=True, upload_to='upload_video/', verbose_name='Загруженный видео файл')),
                ('count_pothole', models.IntegerField(blank=True, null=True, verbose_name='колличество найденных ям')),
                ('count_image', models.IntegerField(blank=True, null=True, verbose_name='колличество сохраненных изображении')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='run_creator', to=settings.AUTH_USER_MODEL, verbose_name='создатель')),
            ],
            options={
                'verbose_name': 'Таблица с данными о каждом выезде',
                'verbose_name_plural': 'Таблица с данными о каждом выезде',
            },
        ),
        migrations.CreateModel(
            name='TrackerData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('navigationtime', models.DateTimeField()),
                ('imei', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Таблица с данными полученные от ГЛОНАСС трекера',
                'verbose_name_plural': 'Таблица с данными полученные от ГЛОНАСС трекера',
            },
        ),
        migrations.CreateModel(
            name='Pothole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.FileField(upload_to='')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='широта расположения ямы')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='долгота расположения ямы')),
                ('count_img_pothole', models.IntegerField(blank=True, null=True, verbose_name='колличество ям на изображении')),
                ('date_table_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pothols', to='detection.detectedtable')),
            ],
            options={
                'verbose_name': 'Таблица с данными о каждой найденной яме',
                'verbose_name_plural': 'Таблица с данными о каждой найденной яме',
            },
        ),
    ]
